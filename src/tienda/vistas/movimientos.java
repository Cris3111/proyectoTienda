/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tienda.vistas;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import tienda.conexionBD.conexion;

/**
 *
 * @author Cristian
 */
public class movimientos extends javax.swing.JFrame {

    /**
     * Creates new form movimientos
     */
    public movimientos() {
        initComponents();
        this.nitProveedor.setVisible(false);
        this.txtBusqueda.setVisible(false);
        this.filtroEntradas.setVisible(false);
        this.txtCampoEntrada.setVisible(false);
        this.fechaHasta.setVisible(false);
        this.txtFechaHasta.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabalDatos = new javax.swing.JTable();
        tipoConsulta = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        filtroEntradas = new javax.swing.JComboBox<>();
        nitProveedor = new javax.swing.JLabel();
        txtCampoEntrada = new javax.swing.JTextField();
        txtBusqueda = new javax.swing.JLabel();
        txtFechaHasta = new javax.swing.JLabel();
        fechaHasta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabalDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabalDatos);

        tipoConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Movimientos de entrada.", "Movimientos de salida.", "Lista Productos." }));
        tipoConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoConsultaActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione la consulta a realizar.");

        filtroEntradas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo Familia.", "Codigo producto.", "por fecha de ingreso", "nit del proveedor." }));
        filtroEntradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroEntradasActionPerformed(evt);
            }
        });

        nitProveedor.setText("Ingrese Nit del proveedor:");

        txtBusqueda.setText("Seleecione un filtro de busqueda:");

        txtFechaHasta.setText("Fecha Hasta:");

        jButton1.setText("Salir");

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtFechaHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(nitProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtBusqueda)
                        .addGap(74, 74, 74)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filtroEntradas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tipoConsulta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCampoEntrada)
                    .addComponent(fechaHasta)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(87, 87, 87))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filtroEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBusqueda))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCampoEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nitProveedor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaHasta)
                    .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void filtroEntradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroEntradasActionPerformed
        // TODO add your handling code here:
         
        System.out.println(  this.filtroEntradas.getSelectedItem());
        
        if(this.filtroEntradas.getSelectedItem().equals("nit del proveedor.")){
            this.nitProveedor.setText("Ingrese Nit Proveedor:");
            this.nitProveedor.setVisible(true);
            this.txtCampoEntrada.setVisible(true);
            this.txtCampoEntrada.setText("");
            this.fechaHasta.setVisible(false);
            this.txtFechaHasta.setVisible(false);
            
        }
        if(this.filtroEntradas.getSelectedItem().equals("Codigo Familia.")){
            System.out.println(  this.filtroEntradas.getSelectedItem().equals("Codigo Familia."));
            this.nitProveedor.setText("Ingrese codigo Familia:");
            this.nitProveedor.setVisible(true);
            this.txtCampoEntrada.setVisible(true);
            this.txtCampoEntrada.setText("");
            this.fechaHasta.setVisible(false);
            this.txtFechaHasta.setVisible(false);
        }
        
        if(this.filtroEntradas.getSelectedItem().equals("Codigo producto.")){
            this.nitProveedor.setText("Ingrese codigo Producto:");
            this.nitProveedor.setVisible(true);
            this.txtCampoEntrada.setVisible(true);
            this.txtCampoEntrada.setText("");
            this.fechaHasta.setVisible(false);
            this.txtFechaHasta.setVisible(false);
        }
        if(this.filtroEntradas.getSelectedItem().equals("por fecha de ingreso")){
            this.nitProveedor.setText("fecha Desde:");
            this.nitProveedor.setVisible(true);
            this.txtCampoEntrada.setVisible(true);
            this.fechaHasta.setVisible(true);
            this.txtFechaHasta.setVisible(true);
            this.txtCampoEntrada.setText("");
        }
        
        /*
        Codigo producto.
por fecha de ingreso
nit del proveedor.
        */
    }//GEN-LAST:event_filtroEntradasActionPerformed

    private void tipoConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoConsultaActionPerformed
        // TODO add your handling code here:
        
        if( this.tipoConsulta.getSelectedItem().equals("Movimientos de entrada.") ){
            this.txtBusqueda.setVisible(true);
            this.filtroEntradas.setVisible(true);
        }
        
        
    }//GEN-LAST:event_tipoConsultaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        modelo.setRowCount(0); 
        modelo.setColumnCount(0);
        try{
             conexion conexion = new conexion();
            conexion.conectar();
            String consultaProducto = "";
            if(this.filtroEntradas.getSelectedItem().equals("Codigo Familia.")){
                consultaProducto = " select EP.ID_Familia_producto, p.Descripcion_Producto  , EP.Cantidad_de_compra ,EP.Valor_por_compra_entrada,EP.NIT_proveedor_entrada,  EP.Telefono_proveedor_entrada,EP.Fecha_de_movimiento_entrada \n" +
                                    "FROM  tienda.entradas_producto EP\n" +
                                    "inner join tienda.productos p on p.ID_Producto = EP.ID_producto  \n" +
                                    "where  Ep.ID_Familia_producto = ? ";
                PreparedStatement statementSelect;
                statementSelect = conexion.conectar().prepareStatement (consultaProducto);
                statementSelect.setString(1,this.txtCampoEntrada.getText());
                this.tipoEncabezadoTabla(1);
                ResultSet consulta = statementSelect.executeQuery();
                
                while(consulta.next()){
            
                    modelo.addRow(new Object[]{
                        consulta.getInt("ID_Familia_producto"),
                        consulta.getString("Descripcion_Producto"),
                        consulta.getInt("Cantidad_de_compra"),
                        consulta.getString("Valor_por_compra_entrada"),
                        consulta.getString("NIT_proveedor_entrada"),
                        consulta.getString("Telefono_proveedor_entrada"),
                        consulta.getString("Fecha_de_movimiento_entrada")
                        });   
                    }
                
            }
            
            if(this.filtroEntradas.getSelectedItem().equals("Codigo producto.")){
            consultaProducto = " select EP.ID_Familia_producto, p.Descripcion_Producto  , EP.Cantidad_de_compra ,EP.Valor_por_compra_entrada,EP.NIT_proveedor_entrada,  EP.Telefono_proveedor_entrada,EP.Fecha_de_movimiento_entrada \n" +
                                "FROM  tienda.entradas_producto EP\n" +
                                "inner join tienda.productos p on p.ID_Producto = EP.ID_producto  \n" +
                                "where Ep.ID_producto = ? ";
                PreparedStatement statementSelect;
                statementSelect = conexion.conectar().prepareStatement (consultaProducto);
                statementSelect.setString(1,this.txtCampoEntrada.getText());
                this.tipoEncabezadoTabla(1);
                ResultSet consulta = statementSelect.executeQuery();
                
                while(consulta.next()){
            
                    modelo.addRow(new Object[]{
                        consulta.getInt("ID_Familia_producto"),
                        consulta.getString("Descripcion_Producto"),
                        consulta.getInt("Cantidad_de_compra"),
                        consulta.getString("Valor_por_compra_entrada"),
                        consulta.getString("NIT_proveedor_entrada"),
                        consulta.getString("Telefono_proveedor_entrada"),
                        consulta.getString("Fecha_de_movimiento_entrada")
                        });   
                    }
            }
        }catch(Exception error){
            //this.limpiarDatos();
            System.out.println(error);
        } 
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
DefaultTableModel modelo = new DefaultTableModel();
    public void tipoEncabezadoTabla(int tipo){
        switch(tipo){
            case 1:
            // SE CREA EL MODELO PARA LA TABLA DE DATOS 
            modelo.addColumn("id Familia");
            modelo.addColumn("Producto");
            modelo.addColumn("cantidad compra");
            modelo.addColumn("Total compra Q");
            modelo.addColumn("Nit Proveedor");
            modelo.addColumn("Telefono proveedor");
            modelo.addColumn("fecha entrada");
            tabalDatos.setModel(modelo);
            break;
     }
    }
    public void limpiar(){
        this.txtCampoEntrada.setText("");
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(movimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new movimientos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fechaHasta;
    private javax.swing.JComboBox<String> filtroEntradas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nitProveedor;
    private javax.swing.JTable tabalDatos;
    private javax.swing.JComboBox<String> tipoConsulta;
    private javax.swing.JLabel txtBusqueda;
    private javax.swing.JTextField txtCampoEntrada;
    private javax.swing.JLabel txtFechaHasta;
    // End of variables declaration//GEN-END:variables
}
